library(tidyverse)
install.packages("tidyverse")
data$Country <- as.factor(data$Country)
knitr::opts_chunk$set(echo = TRUE)
x <- c(40, 20, 20, 20)
labels <- c("Investment", "Saving", "Insurance", "Expense")
piepercent<- round(100*x/sum(x), 1)
pie(x,labels = piepercent, main = "Aggressive", col = rainbow(length(x)))
legend("topright", c("Investment", "Saving", "Insurance", "Expense"), cex = 0.8,
fill = rainbow(length(x)))
# (echo = FALSE)
x <- c(10, 40, 25, 25)
labels <- c("Investment", "Saving", "Insurance", "Expense")
piepercent<- round(100*x/sum(x), 1)
pie(x,labels = piepercent, main = "Aggressive", col = rainbow(length(x)))
legend("topright", c("Investment", "Saving", "Insurance", "Expense"), cex = 0.8,
fill = rainbow(length(x)))
# (echo = FALSE)
library(readr)
data <- read.csv("financial-literacy-survey.csv")
print(data)
x = mean(data$Overall_Ranking)
sprintf("Mean: %.2f", x)
std = sd(data$Overall_Ranking)
sprintf("Standard Deviation: %.2f", std)
install.packages("tidyverse")
barplot(table(data$Country))
install.packages("tidyverse")
data$Country <- as.factor(data$Country)
barplot(table(data$Country))
install.packages("tidyverse")
table %>% ggplot(aes(x = data$Country, y = data$Overall_Ranking) + geom_col(aes(fill = data$Country)))
install.packages("tidyverse")
table <- temp %>% group_by(data$Country) %>%
summarize(overallR = mean(data$Overall_Ranking))
install.packages("tidyverse")
install.packages("magrittr") # package installations are only needed the first time you use it
install.packages("dplyr")    # alternative installation of the %>%
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse")
install.packages("magrittr") # package installations are only needed the first time you use it
install.packages("dplyr")    # alternative installation of the %>%
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse")
install.packages("magrittr") # package installations are only needed the first time you use it
install.packages("dplyr")    # alternative installation of the %>%
library(magrittr) # needs to be run every time you start R and want to use %>%
#library(dplyr)    # alternatively, this also loads %>%
data %>% ggplot(aes(x = data$Country, y = data$Overall_Ranking))
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
#install.packages("magrittr") # package installations are only needed the first time you use it
#install.packages("dplyr")    # alternative installation of the %>%
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country", names.arg = c(bar$Country))
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, bar$Country, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country")
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country", names.arg = c(bar$Country))
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country", names.arg = c(bar$Country),
horiz = TRUE)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names.arg = c("United States", "Italy", "Germany", "Sweden", "Japan", "New Zealand", "Netherlands", "Russian Federation", "Romania",
"Azerbaijan", "Chile", "Indonesia", "India", "West Bank and Gaza"),
horiz = TRUE)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names.arg = c("United States", "Italy", "Germany", "Sweden", "Japan", "New Zealand", "Netherlands", "Russian Federation", "Romania",
"Azerbaijan", "Chile", "Indonesia", "India", "West Bank and Gaza"),
horiz = TRUE)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names.arg = c("United States", "Italy", "Germany", "Sweden", "Japan", "New Zealand", "Netherlands", "Russian Federation", "Romania",
"Azerbaijan", "Chile", "Indonesia", "India", "West Bank and Gaza"),
horiz = TRUE)
# (echo = FALSE)
library(grid)
library(gridBase)
install.packages("grid")
library(grid)
library(gridBase)
install.packages("grid")
knitr::opts_chunk$set(echo = TRUE)
install.packages("grid")
library(grid)
library(gridBase)
install.packages("gridBase")
library(grid)
library(gridBase)
## Make some data with names long enough that barplot won't print them all
DD <- table(data$Country, data$Overall_Ranking))
install.packages("gridBase")
library(grid)
library(gridBase)
## Make some data with names long enough that barplot won't print them all
DD <- table(data$Country, data$Overall_Ranking)
names(DD) <- paste("long", names(DD), sep="_")
## Plot, but suppress the labels
midpts <- barplot(DD, col=rainbow(20), names.arg="")
install.packages("gridBase")
knitr::opts_chunk$set(echo = TRUE)
install.packages("gridBase")
library(grid)
library(gridBase)
## Make some data with names long enough that barplot won't print them all
DD <- table(data$Country, data$Overall_Ranking)
names(DD) <- paste("long", names(DD), sep="_")
## Plot, but suppress the labels
midpts <- barplot(DD, col=rainbow(20), names.arg=(data$Country))
## Use grid to add the labels
vps <- baseViewports()
pushViewport(vps$inner, vps$figure, vps$plot)
grid.text(names(DD),
x = unit(midpts, "native"), y=unit(-1, "lines"),
just="right", rot=50)
popViewport(3)
install.packages("gridBase")
library(grid)
library(gridBase)
## Make some data with names long enough that barplot won't print them all
names(data) <- paste("long", names(data$Country), sep="_")
## Plot, but suppress the labels
midpts <- barplot(data$Overall_Ranking, col=rainbow(20), names.arg=(data$Country))
install.packages("gridBase")
knitr::opts_chunk$set(echo = TRUE)
install.packages("gridBase")
library(grid)
library(gridBase)
## Make some data with names long enough that barplot won't print them all
names(data) <- paste("long", names(data$Country), sep="_")
## Plot, but suppress the labels
midpts <- barplot(data, col=rainbow(20), names.arg=(data$Country))
library(grid)
library(gridBase)
## Make some data with names long enough that barplot won't print them all
names(data) <- paste("long", names(data$Country), sep="_")
## Plot, but suppress the labels
midpts <- barplot(data, col=rainbow(20), names.arg=(data$Country))
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names.arg = c("US", "It", "Germany", "Sweden", "Japan", "New Zealand", "Netherlands", "Russian Federation", "Romania",
"Azerbaijan", "Chile", "Indonesia", "India", "West Bank and Gaza"),
horiz = TRUE)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, ylim = c(0,200), main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names.arg = c("US", "It", "Germany", "Sweden", "Japan", "New Zealand", "Netherlands", "Russian Federation", "Romania",
"Azerbaijan", "Chile", "Indonesia", "India", "West Bank and Gaza"),
horiz = TRUE)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names = c("US", "It", "Germany", "Sweden", "Japan", "New Zealand", "Netherlands", "Russian Federation", "Romania",
"Azerbaijan", "Chile", "Indonesia", "India", "West Bank and Gaza"),
horiz = TRUE)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names = bar$Country,
horiz = TRUE)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, xlim = (0,200), main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Overall Ranking", ylab = "Country",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Country", ylab = "Overall Ranking",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Country", ylab = "Overall Ranking",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Country", ylab = "Overall Ranking",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Country", ylab = "Overall Ranking",
# countries manually typed since dataset is small
names = bar$Country)
# (echo = FALSE)
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Country", ylab = "Overall Ranking", names = bar$Country)
library(readxl)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Country", ylab = "Overall Ranking", names = bar$Country)
bar <- read.csv("financial-literacy-survey.csv") # to avoid customizing the orig data
barplot(bar$Overall_Ranking, main = "Overall Ranking by Countries", xlab = "Country", ylab = "Overall Ranking", names = bar$Country)
# (echo = FALSE)
dot <- read.csv("financial-literacy-survey.csv")
dot <- read.csv("financial-literacy-survey.csv")
dotchart(dot$Q1..Compound.Interest, labels = dot$Country)
dot <- read.csv("financial-literacy-survey.csv")
dotchart(dot$Q1..Compound.Interest, labels = dot$Country)
dot <- read.csv("financial-literacy-survey.csv")
dotchart(dot$Q1..Compound.Interest, labels = dot$Country, main = "Compound Interest")
pieC <- read.csv("financial-literacy-survey.csv")
pie(pieC$)
pieC <- read.csv("financial-literacy-survey.csv")
pie(pieC$Q2..Inflation, labels = pieC$Country, main = "Inflation")
bp <- read.csv("financial-literacy-survey.csv")
barplot(bp
main = "Overall Ranking by Countries",
bp <- read.csv("financial-literacy-survey.csv")
barplot(bp$Q3..Risk.Diversification,
main = "Risk Diversification",
xlab = "Country",
ylab = "Overall Ranking",
names = data$Country)
plt <- read.csv("financial-literacy-survey.csv")
plt <- read.csv("financial-literacy-survey.csv")
plot(plt$Q3..Risk.Diversification, plt$Country, xlab = "Q3", ylab = "Country", main = "Risk Diversification")
dot <- read.csv("financial-literacy-survey.csv")
dotchart(dot$Q1..Compound.Interest, labels = dot$Country, main = "Compound Interest") #Q1
dotchart(dot$Q2..Inflation, labels = dot$Country, main = "Inflation") #Q2
dotchart(dot$Q3..Risk.Diversification, labels = dot$Country, main = "RiskDiversification") #Q3
